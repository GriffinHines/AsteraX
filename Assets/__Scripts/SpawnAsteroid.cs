using System.Collections; using System.Collections.Generic; using UnityEngine;  public class SpawnAsteroid : MonoBehaviour { 	public GameObject[] spawnPrefab; 	public GameObject[] prefabClone; 	Vector2 direction;  	// Use this for initialization 	void Start () { 		Spawn (); 		InvokeRepeating("Spawn1", 6f, 6f); 	}  	// Update is called once per frame  	void Spawn(){ 		prefabClone [0] = Instantiate (spawnPrefab [0], genPosition(), Quaternion.Euler (0, 0, 0)) as GameObject; 		prefabClone [1] = Instantiate (spawnPrefab [1], genPosition(), Quaternion.Euler (0, 0, 0)) as GameObject; 		prefabClone [2] = Instantiate (spawnPrefab [2], genPosition(), Quaternion.Euler (0, 0, 0)) as GameObject;  		prefabClone [0].transform.localScale += new Vector3(2.5f, 2.5f, 2.5f); 		prefabClone [1].transform.localScale += new Vector3(2.5f, 2.5f, 2.5f); 		prefabClone [2].transform.localScale += new Vector3(2.5f, 2.5f, 2.5f);  	}  	void Spawn1(){ 		if (Random.value <= 0.3f) { 			prefabClone [0] = Instantiate (spawnPrefab [0], genPosition (), Quaternion.Euler (0, 0, 0)) as GameObject; 			prefabClone [0].transform.localScale += new Vector3 (2.5f, 2.5f, 2.5f); 		}  		else if (Random.value <= 0.6f) { 			prefabClone [1] = Instantiate (spawnPrefab [1], genPosition (), Quaternion.Euler (0, 0, 0)) as GameObject; 			prefabClone [1].transform.localScale += new Vector3(2.5f, 2.5f, 2.5f); 		} 		else { 			prefabClone [2] = Instantiate (spawnPrefab [2], genPosition(), Quaternion.Euler (0, 0, 0)) as GameObject; 			prefabClone [2].transform.localScale += new Vector3(2.5f, 2.5f, 2.5f); 		} 	}  	Vector3 genPosition(){ 		float xValue, yValue;  		//Choose whether to spawn from the vertical or horizontal direction 		if (Random.value < 0.5f) { 			xValue = Random.value < 0.5 ? 1.014f : 0f; //choose to spawn on right or left 			yValue = Random.Range (0f, 1f);  		}   		else { 			yValue = Random.value < 0.5 ? 1.014f : 0f; //choose to spawn on top or bottom 			xValue = Random.Range (0f, 1f);  		} 		Vector3 asteroidPos = Camera.main.ViewportToWorldPoint(new Vector3 (xValue, yValue, 10f));  		return asteroidPos; 	} }  